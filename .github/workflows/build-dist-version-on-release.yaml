name: Build distribution version on release
on:
  release:
    types: [created]

jobs:
  build-distribution-version-into-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository
      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: "20"
      - run: npm ci
        name: Install dependencies
      - run: npm run build
        name: Build distribution version
      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: dist-${{ github.event.repository.name }}-${{ github.event.release.tag_name }}
          path: build

  build-distribution-version-into-docker-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Check if secrets exist
        run: |
          if [[ -z "${{ secrets.DOCKER_LOGIN_SERVER }}" || -z "${{ secrets.DOCKER_USERNAME }}" || -z "${{ secrets.DOCKER_PASSWORD }}" ]]; then
            echo "Error: Secrets not found."
            exit 1
          fi

      - uses: docker/login-action@v2
        name: Log in to the Container registry
        with:
          registry: ${{ secrets.DOCKER_LOGIN_SERVER}}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/setup-buildx-action@v2
        name: Set up Docker Buildx
        id: buildx

      - uses: docker/build-push-action@v4
        name: Build and push Docker image
        with:
          context: .
          file: Dockerfile
          cache-from: type=registry,ref=${{ secrets.DOCKER_LOGIN_SERVER }}/${{ github.event.repository.name }}:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_LOGIN_SERVER }}/${{ github.event.repository.name }}:cache,mode=max
          push: true
          tags: ${{ secrets.DOCKER_LOGIN_SERVER }}/${{ github.event.repository.name }}${{ github.event.release.tag_name }}
